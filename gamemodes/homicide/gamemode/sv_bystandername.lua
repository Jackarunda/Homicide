GM.BystanderNameParts={
	male={
		"James",
		"John",
		"Robert",
		"Michael",
		"William",
		"David",
		"Richard",
		"Charles",
		"Joseph",
		"Thomas",
		"Christopher",
		"Daniel",
		"Paul",
		"Mark",
		"Donald",
		"George",
		"Kenneth",
		"Steven",
		"Edward",
		"Brian",
		"Ronald",
		"Anthony",
		"Kevin",
		"Jason",
		"Matthew",
		"Gary",
		"Timothy",
		"Jose",
		"Larry",
		"Jeffrey",
		"Frank",
		"Scott",
		"Eric",
		"Stephen",
		"Andrew",
		"Raymond",
		"Gregory",
		"Joshua",
		"Jerry",
		"Dennis",
		"Walter",
		"Patrick",
		"Peter",
		"Harold",
		"Douglas",
		"Henry",
		"Carl",
		"Arthur",
		"Ryan",
		"Roger",
		"Joe",
		"Juan",
		"Jack",
		"Albert",
		"Jonathan",
		"Justin",
		"Terry",
		"Gerald",
		"Keith",
		"Samuel",
		"Willie",
		"Ralph",
		"Lawrence",
		"Nicholas",
		"Roy",
		"Benjamin",
		"Bruce",
		"Brandon",
		"Adam",
		"Harry",
		"Fred",
		"Wayne",
		"Billy",
		"Steve",
		"Louis",
		"Jeremy",
		"Aaron",
		"Randy",
		"Howard",
		"Eugene",
		"Carlos",
		"Russell",
		"Bobby",
		"Victor",
		"Martin",
		"Ernest",
		"Phillip",
		"Todd",
		"Jesse",
		"Craig",
		"Alan",
		"Shawn",
		"Clarence",
		"Sean",
		"Philip",
		"Chris",
		"Johnny",
		"Earl",
		"Jimmy",
		"Antonio",
		"Danny",
		"Bryan",
		"Tony",
		"Luis",
		"Mike",
		"Stanley",
		"Leonard",
		"Nathan",
		"Dale",
		"Manuel",
		"Rodney",
		"Curtis",
		"Norman",
		"Allen",
		"Marvin",
		"Vincent",
		"Glenn",
		"Jeffery",
		"Travis",
		"Jeff",
		"Chad",
		"Jacob",
		"Lee",
		"Melvin",
		"Alfred",
		"Kyle",
		"Francis",
		"Bradley",
		"Jachai",
		"Herbert",
		"Frederick",
		"Ray",
		"Joel",
		"Edwin",
		"Don",
		"Eddie",
		"Ricky",
		"Troy",
		"Randall",
		"Barry",
		"Alexander",
		"Bernard",
		"Mario",
		"Leroy",
		"Francisco",
		"Marcus",
		"Micheal",
		"Theodore",
		"Clifford",
		"Miguel",
		"Oscar",
		"Jay",
		"Jim",
		"Tom",
		"Calvin",
		"Alex",
		"Jon",
		"Ronnie",
		"Bill",
		"Lloyd",
		"Tommy",
		"Leon",
		"Derek",
		"Warren",
		"Darrell",
		"Jerome",
		"Floyd",
		"Leo",
		"Alvin",
		"Tim",
		"Wesley",
		"Gordon",
		"Dean",
		"Greg",
		"Jorge",
		"Dustin",
		"Pedro",
		"Derrick",
		"Dan",
		"Lewis",
		"Zachary",
		"Corey",
		"Herman",
		"Trevor",
		"Vernon",
		"Roberto",
		"Clyde",
		"Glen",
		"Hector",
		"Shane",
		"Ricardo",
		"Sam",
		"Rick",
		"Lester",
		"Brent",
		"Ramon",
		"Charlie",
		"Tyler",
		"Gilbert",
		"Gene",
		"Marc",
		"Reginald",
		"Ruben",
		"Brett",
		"Jace",
		"Nathaniel",
		"Rafael",
		"Leslie",
		"Edgar",
		"Milton",
		"Raul",
		"Ben",
		"Chester",
		"Cecil",
		"Duane",
		"Franklin",
		"Andre",
		"Elmer",
		"Brad",
		"Gabriel",
		"Ron",
		"Mitchell",
		"Roland",
		"Arnold",
		"Harvey",
		"Jared",
		"Adrian",
		"Karl",
		"Cory",
		"Claude",
		"Erik",
		"Darryl",
		"Jamie",
		"Neil",
		"Jessie",
		"Christian",
		"Javier",
		"Fernando",
		"Clinton",
		"Ted",
		"Mathew",
		"Tyrone",
		"Darren",
		"Lonnie",
		"Lance",
		"Cody",
		"Julio",
		"Jimbo",
		"Kurt",
		"Allan",
		"Nelson",
		"Guy",
		"Clayton",
		"Hugh",
		"Max",
		"Dwayne",
		"Dwight",
		"Armando",
		"Felix",
		"Jimmie",
		"Everett",
		"Jordan",
		"Ian",
		"Wallace",
		"Ken",
		"Bob",
		"Jaime",
		"Casey",
		"Alfredo",
		"Alberto",
		"Dave",
		"Ivan",
		"Johnnie",
		"Sidney",
		"Byron",
		"Julian",
		"Isaac",
		"Morris",
		"Clifton",
		"Willard",
		"Daryl",
		"Ross",
		"Virgil",
		"Andy",
		"Marshall",
		"Salvador",
		"Perry",
		"Kirk",
		"Sergio",
		"Marion",
		"Tracy",
		"Seth",
		"Kent",
		"Terrance",
		"Rene",
		"Eduardo",
		"Terrence",
		"Enrique",
		"Freddie",
		"Wade"
	},
	female={
		"Mary",
		"Patricia",
		"Linda",
		"Barbara",
		"Elizabeth",
		"Jennifer",
		"Maria",
		"Susan",
		"Margaret",
		"Dorothy",
		"Lisa",
		"Nancy",
		"Karen",
		"Betty",
		"Helen",
		"Sandra",
		"Donna",
		"Carol",
		"Ruth",
		"Sharon",
		"Michelle",
		"Laura",
		"Sarah",
		"Kimberly",
		"Deborah",
		"Jessica",
		"Shirley",
		"Cynthia",
		"Angela",
		"Melissa",
		"Brenda",
		"Amy",
		"Anna",
		"Rebecca",
		"Virginia",
		"Kathleen",
		"Pamela",
		"Martha",
		"Debra",
		"Amanda",
		"Stephanie",
		"Carolyn",
		"Christine",
		"Marie",
		"Janet",
		"Catherine",
		"Frances",
		"Ann",
		"Joyce",
		"Diane",
		"Alice",
		"Julie",
		"Heather",
		"Teresa",
		"Doris",
		"Gloria",
		"Evelyn",
		"Jean",
		"Cheryl",
		"Mildred",
		"Katherine",
		"Joan",
		"Ashley",
		"Judith",
		"Rose",
		"Janice",
		"Kelly",
		"Nicole",
		"Judy",
		"Christina",
		"Kathy",
		"Theresa",
		"Beverly",
		"Denise",
		"Tammy",
		"Irene",
		"Jane",
		"Lori",
		"Rachel",
		"Marilyn",
		"Andrea",
		"Kathryn",
		"Louise",
		"Sara",
		"Anne",
		"Jacqueline",
		"Wanda",
		"Bonnie",
		"Julia",
		"Ruby",
		"Lois",
		"Tina",
		"Phyllis",
		"Norma",
		"Paula",
		"Diana",
		"Annie",
		"Lillian",
		"Emily",
		"Robin",
		"Peggy",
		"Crystal",
		"Gladys",
		"Rita",
		"Dawn",
		"Connie",
		"Taylor",
		"Tracy",
		"Edna",
		"Tiffany",
		"Carmen",
		"Rosa",
		"Cindy",
		"Grace",
		"Wendy",
		"Victoria",
		"Edith",
		"Kim",
		"Sherry",
		"Sylvia",
		"Josephine",
		"Thelma",
		"Shannon",
		"Sheila",
		"Ethel",
		"Ellen",
		"Elaine",
		"Marjorie",
		"Carrie",
		"Charlotte",
		"Monica",
		"Esther",
		"Pauline",
		"Emma",
		"Juanita",
		"Anita",
		"Rhonda",
		"Hazel",
		"Amber",
		"Eva",
		"Debbie",
		"April",
		"Leslie",
		"Clara",
		"Lucille",
		"Jamie",
		"Joanne",
		"Eleanor",
		"Valerie",
		"Danielle",
		"Megan",
		"Alicia",
		"Suzanne",
		"Michele",
		"Gail",
		"Bertha",
		"Darlene",
		"Veronica",
		"Jill",
		"Erin",
		"Geraldine",
		"Lauren",
		"Cathy",
		"Joann",
		"Lorraine",
		"Lynn",
		"Sally",
		"Regina",
		"Erica",
		"Beatrice",
		"Dolores",
		"Bernice",
		"Audrey",
		"Yvonne",
		"Annette",
		"June",
		"Samantha",
		"Marion",
		"Dana",
		"Stacy",
		"Ana",
		"Renee",
		"Ida",
		"Vivian",
		"Roberta",
		"Holly",
		"Brittany",
		"Melanie",
		"Loretta",
		"Yolanda",
		"Jeanette",
		"Laurie",
		"Katie",
		"Kristen",
		"Vanessa",
		"Alma",
		"Sue",
		"Elsie",
		"Beth",
		"Jeanne",
		"Vicki",
		"Carla",
		"Tara",
		"Rosemary",
		"Eileen",
		"Terri",
		"Gertrude",
		"Lucy",
		"Tonya",
		"Ella",
		"Stacey",
		"Wilma",
		"Gina",
		"Kristin",
		"Jessie",
		"Natalie",
		"Agnes",
		"Vera",
		"Willie",
		"Charlene",
		"Bessie",
		"Delores",
		"Melinda",
		"Pearl",
		"Arlene",
		"Maureen",
		"Colleen",
		"Allison",
		"Tamara",
		"Joy",
		"Georgia",
		"Constance",
		"Lillie",
		"Claudia",
		"Jaunnie",
		"Marcia",
		"Tanya",
		"Nellie",
		"Joanna",
		"Marlene",
		"Heidi",
		"Glenda",
		"Lydia",
		"Viola",
		"Courtney",
		"Marian",
		"Stella",
		"Caroline",
		"Dora",
		"Jo",
		"Vickie",
		"Mattie",
		"Terry",
		"Maxine",
		"Irma",
		"Mabel",
		"Marsha",
		"Myrtle",
		"Lena",
		"Christy",
		"Deanna",
		"Patsy",
		"Hilda",
		"Gwendolyn",
		"Jennie",
		"Nora",
		"Margie",
		"Nina",
		"Cassandra",
		"Leah",
		"Penny",
		"Kay",
		"Priscilla",
		"Naomi",
		"Carole",
		"Brandy",
		"Olga",
		"Billie",
		"Dianne",
		"Tracey",
		"Leona",
		"Jenny",
		"Felicia",
		"Sonia",
		"Miriam",
		"Velma",
		"Becky",
		"Bobbie",
		"Violet",
		"Kristina",
		"Makayla",
		"Misty",
		"Mae",
		"Shelly",
		"Daisy",
		"Ramona",
		"Sherri",
		"Erika",
		"Katrina",
		"Claire"
	}
}

local PlayerMeta=FindMetaTable("Player")
local EntityMeta=FindMetaTable("Entity")

// adds a name to the bystander parts generation table
function GM:AddBystanderNamePart(name,gender)
	table.insert(self.BystanderNameParts[gender],name)
end

// removes a name to the bystander parts generation table
function GM:RemoveBystanderNamePart(name,gender)
	table.RemoveByValue(self.BystanderNameParts[gender],name)
end

// returns the bystander parts generation table
function GM:GetBystanderNameParts()
	return self.BystanderNameParts.Male,self.BystanderNameParts.Female
end

function GM:GenerateName(gender,words)
	if #self.BystanderNameParts[gender] <= 0 then
		return "error"
	end
	local name
	for i=1, words do
		local word=self.BystanderNameParts[gender][math.random(#self.BystanderNameParts[gender])]
		if !name then
			name=word
		else
			name=name .. " " .. word
		end
	end
	return name
end

local function SetCustomIdentity(ply,name,args)
	local Name,Maudel,R,G,B,ProperName,Upper,Core,Lower,Clothes,Accessory=args[1],args[2],tonumber(args[3]),tonumber(args[4]),tonumber(args[5]),"",tonumber(args[6]),tonumber(args[7]),tonumber(args[8]),args[9],args[10]
	Name,Accessory=string.Replace(Name,"_"," "),string.Replace(Accessory,"_"," ")
	if not((Name)and(Maudel)and(R)and(B)and(G)and(Upper)and(Core)and(Lower)and(Clothes)and(Accessory))then ply:PrintMessage(HUD_PRINTTALK,"Homicide: wrong identity file format (need ten lines: name, model, red, green, blue, upper body, core, lower body, clothing, accessory)") return end
	ProperName=string.gsub(Name,"[^%a%d ]","",1e10) -- alphanumeric characters and spaces only
	ProperName=string.Trim(ProperName) -- no leading or trailing whitespace
	if not(string.len(ProperName)>0)then ply:PrintMessage(HUD_PRINTTALK,"Homicide: couldn't parse custom name (example: My Custom Name)") return end
	if((ProperName=="Traitor")or(ProperName=="Murderer"))then ply:PrintMessage(HUD_PRINTTALK,"Homicide: 'traitor' and 'murderer' are reserved names.") return end
	if not(table.HasValue(HMCD_ValidModels,Maudel))then ply:PrintMessage(HUD_PRINTTALK,"Homicide: invalid requested model (example: male01)") return end
	if not(((R>=0)and(R<=1))and((G>=0)and(G<=1))and((B>=0)and(B<=1)))then ply:PrintMessage(HUD_PRINTTALK,"Homicide: invalid color values (sample: 1 .5 .2)") return end
	--if((Stature<95)or(Stature>105))then ply:PrintMessage(HUD_PRINTTALK,"Homicide: invalid stature parameter! Must be between 95 and 105") return end
	if((Upper<80)or(Upper>130))then ply:PrintMessage(HUD_PRINTTALK,"Homicide: invalid upper-body parameter! Must be between 80 and 130") return end
	if((Core<75)or(Core>120))then ply:PrintMessage(HUD_PRINTTALK,"Homicide: invalid core-body parameter! Must be between 75 and 120") return end
	if((Lower<80)or(Lower>130))then ply:PrintMessage(HUD_PRINTTALK,"Homicide: invalid lower-body parameter! Must be between 80 and 130") return end
	if not(table.HasValue(HMCD_ValidClothes,Clothes))then ply:PrintMessage(HUD_PRINTTALK,"Homicide: invalid clothing type! Must be either normal, casual, striped, plaid, formal, young or cold!") return end
	if not(HMCD_Accessories[Accessory])then
		ply:PrintMessage(HUD_PRINTTALK,"Homicide: invalid accessory! Must be one of the following:")
		local Str=""
		for key,item in pairs(HMCD_Accessories)do Str=Str..key..", " end
		ply:PrintMessage(HUD_PRINTTALK,Str)
		return
	end
	ply.CustomName=ProperName
	ply.CustomModel=Maudel
	ply.CustomColor=Vector(R,G,B)
	ply.CustomUpperBody=Upper
	ply.CustomCoreBody=Core
	ply.CustomLowerBody=Lower
	ply.CustomClothes=Clothes
	ply.CustomAccessory=Accessory
	--ply.CustomStature=Stature
	ply:PrintMessage(HUD_PRINTTALK,"Custom identity set: "..ProperName.." "..Maudel.." color "..tostring(R).." "..tostring(G).." "..tostring(B).." upperbody "..tostring(Upper).." core "..tostring(Core).." lowerbody "..tostring(Lower).." wearing "..Clothes.." clothes+"..Accessory)
end
concommand.Add("homicide_identity",SetCustomIdentity)

local function OpenAppearanceMenu(ply,cmd,args)
	net.Start("hmcd_openappearancemenu")
	net.Send(ply)
end
concommand.Add("homicide_appearance_menu",OpenAppearanceMenu)

function EntityMeta:GenerateBystanderName()
	local words=1
	local name=GAMEMODE:GenerateName(self.ModelSex,words)
	if(self.CustomName)then name=self.CustomName end
	self:SetNWString("bystanderName", name)
	self.BystanderName=name
end

function EntityMeta:SetBystanderName(name)
	self:SetNWString("bystanderName", name)
	self.BystanderName=name
end

function EntityMeta:GetBystanderName()
	local name=self:GetNWString("bystanderName")
	if !name || name == "" then
		return "Bystander"
	end
	return name
end

concommand.Add("mu_print_players", function (admin, com, args)
	if !admin:IsAdmin() then return end

	for k, ply in pairs(player.GetAll()) do
		local c=ChatText()
		c:Add(ply:Nick())
		local col=ply:GetPlayerColor()
		c:Add(" " .. ply:GetBystanderName(), Color(col.x*255, col.y*255, col.z*255))
		c:Add(" " .. ply:SteamID())
		c:Add(" " .. team.GetName(ply:Team()), team.GetColor(ply:Team()))
		c:Send(admin)
	end
end)